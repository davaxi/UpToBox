version: '3'

services:
  database:
    networks:
      - default
    image: postgres:14-alpine
    container_name: db.uptobox-publisher
    ports:
      - "5432:5432"
    volumes:
      - database-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app_local
      - POSTGRES_DB=app
      - PGDATA=/var/lib/postgresql/data

  python:
    networks:
      - default
    container_name: python.uptobox-publisher
    build:
      dockerfile: Dockerfile
      context: .
    working_dir: /app
    entrypoint:
      - python
    volumes:
      - .:/app
      - .cache:/root/.cache
    env_file:
      - .env-local

  web:
    networks:
      - default
      - traefik
    depends_on:
      - database
    container_name: web.uptobox-publisher
    build:
      dockerfile: Dockerfile
      context: .
    working_dir: /app
    entrypoint:
      - python
      - handler.py
    volumes:
      - .:/app
    env_file:
      - .env-local
    labels:
      - traefik.enable=true
      - traefik.http.services.web_uptobox_publisher.loadbalancer.server.port=5000
      - traefik.http.routers.web_uptobox_publisher.tls=true
      - traefik.http.routers.web_uptobox_publisher.tls.certResolver=patiashvili
      - traefik.http.routers.web_uptobox_publisher.rule=Host(`uptobox.patiashvili`)
      - traefik.http.routers.web_uptobox_publisher_onion.rule=Host(`mee5vfawaw3gkzasod6ipghud27qzfi3sjxofy6mnvvprmg2bnv5qsad.onion`)
      - traefik.http.routers.web_uptobox_publisher_onion.tls=false
      - traefik.http.middlewares.tor_headers.headers.customresponseheaders.Onion-Location=`mee5vfawaw3gkzasod6ipghud27qzfi3sjxofy6mnvvprmg2bnv5qsad.onion`
      - traefik.http.routers.web_uptobox_publisher_onion.middlewares=tor_headers




volumes:
  database-data:

networks:
  default:
    driver: bridge
  traefik:
    name: traefik_proxy